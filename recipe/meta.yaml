{% set name = "onnx" %}
{% set version = "1.10.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/onnx/onnx/archive/v{{ version }}.tar.gz
  sha256: 41367f27d44e599d774c952ca89c87fdea913a312fb785dc429f97be27eb530c

build:
  number: 1
  entry_points:
    - check-model = onnx.bin.checker:check_model
    - check-node = onnx.bin.checker:check_node
    - backend-test-tools = onnx.backend.test.cmd_tools:main

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - pybind11                               # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - make
    - libprotobuf
  host:
    - python
    - pip
    - protobuf
    - libprotobuf
    - pytest-runner
    - ninja
    - pybind11
    - numpy
  run:
    - python
    - protobuf
    - {{ pin_compatible('numpy') }}
    - six
    - typing-extensions >=3.6.2.1

test:
  requires:
    - pip
  imports:
    - onnx
  commands:
    - pip check
    - check-model --help
    - check-node --help
    - backend-test-tools --help

about:
  home: https://github.com/onnx/onnx/
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: Open Neural Network Exchange library
  description: |
    Open Neural Network Exchange (ONNX) is the first step toward an open
    ecosystem that empowers AI developers to choose the right tools as their
    project evolves. ONNX provides an open source format for AI models. It
    defines an extensible computation graph model, as well as definitions of
    built-in operators and standard data types. Initially we focus on the
    capabilities needed for inferencing (evaluation).

extra:
  recipe-maintainers:
    - ezyang
    - marcelotrevisani
    - xhochy
